Akka
====

We believe that writing correct concurrent & distributed, resilient and elastic applications is too hard.
Most of the time it's because we are using the wrong tools and the wrong level of abstraction.

Akka is here to change that.

Using the Actor Model we raise the abstraction level and provide a better platform to build correct concurrent and scalable applications. This model is a perfect match for the principles laid out in the [Reactive Manifesto](http://www.reactivemanifesto.org/).

For resilience, we adopt the "Let it crash" model which the telecom industry has used with great success to build applications that self-heal and systems that never stop.

Actors also provide the abstraction for transparent distribution and the basis for truly scalable and fault-tolerant applications.

Learn more at [akka.io](http://akka.io/).

Reference Documentation
-----------------------

The reference documentation is available at [doc.akka.io](http://doc.akka.io),
for [Scala](http://doc.akka.io/docs/akka/current/scala.html) and [Java](http://doc.akka.io/docs/akka/current/java.html).

Community
---------
You can join these groups and chats to discuss and ask Akka related questions:

- Mailing list: [![google groups: akka-user](https://img.shields.io/badge/group%3A-akka--user-blue.svg?style=flat-square)](https://groups.google.com/forum/#!forum/akka-user)
- Chat room about *using* Akka: [![gitter: akka/akka](https://img.shields.io/badge/gitter%3A-akka%2Fakka-blue.svg?style=flat-square)](https://gitter.im/akka/akka)
-   guaranteed to work: see the documentation to `unload()` for caveats.

* `build()` builds a package file from package sources. You can
  use it to build a binary version of your package.

* `install_*` functions install an R package:
   * `install_github()` from github,
   * `install_bitbucket()` from bitbucket, 
   * `install_url()` from an arbitrary url and
   * `install_local()` from a local file on disk. 
   * `install_version()` installs a specified version from cran.

Check and release:

* `check()` updates the documentation, then builds and checks the package. 
  `build_win()` builds a package using 
  [win-builder](http://win-builder.r-project.org/), allowing you to easily check 
  your package on windows.

* `run_examples()` will run all examples to make sure they work.
  This is useful because example checking is the last step of `R CMD check`.

* `check_man()` runs most of the documentation checking components
  of `R CMD check`

* `release()` makes sure everything is ok with your package
  (including asking you a number of questions), then builds and
  uploads to CRAN. It also drafts an email to let the CRAN
  maintainers know that you've uploaded a new package.

## Diaspora

devtools started off as a lean-and-mean package to facilitate local package development, but over the years it accumulated more and more functionality. Currently devtools is under going a diaspora to split out functionality into smaller, more tightly focussed packages. The diaspora includes:

* [pkgbuild](https://github.com/r-lib/pkgbuild): Building binary packages
  (including checking if build tools are available).

* [pkgload](https://github.com/r-lib/pkgload): Simulating package loading 
  (i.e. `load_all()`)

* [rcmdcheck](https://github.com/r-lib/rcmdcheck): Running R CMD check
  and reporting the results.
----------
Contributions are *very* welcome!

If you see an issue that you'd like to see fixed, the best way to make it happen is to help out by submitting a pull request implementing it.

Refer to the [CONTRIBUTING.md](https://github.com/akka/akka/blob/master/CONTRIBUTING.md) file for more details about the workflow,
and general hints on how to prepare your pull request. You can also ask for clarifications or guidance in GitHub issues directly,
or in the akka/dev chat if a more real time communication would be of benefit.

A chat room is available for all questions related to *developing and contributing* to Akka:
[![gitter: akka/dev](https://img.shields.io/badge/gitter%3A-akka%2Fdev-blue.svg?style=flat-square)](https://gitter.im/akka/dev)

License
-------

Akka is Open Source and available under the Apache 2 License.

[akka-dependency-badge]: https://index.scala-lang.org/count.svg?q=dependencies:akka/*&subject=scaladex:&color=blue&style=flat-square "Built with Akka"
[akka-dependency-scaladex]: https://index.scala-lang.org/search?q=dependencies:akka/*
